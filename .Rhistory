library(jsonlite)
library(rjson)
library(data.table)
library(httr)
library(curl)
library(tibble)
setwd("C:\\Users\\Ruben\\Documents\\05. RCE")
url <- "https://api.linkeddata.cultureelerfgoed.nl/datasets/rce/Cultuurhistorische-Thesaurus-CHT/services/Cultuurhistorische-Thesaurus-CHT/sparql"
body <- list(
format = "json",
query = "PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?hostname (count(?hostname) as ?unique_domains)
WHERE {
?term a skos:Concept .
?term ?pred ?obj .
FILTER(REGEX(?pred, 'Match'))
bind(strbefore(strafter(str(?obj), '://'), '/') as ?hostname)
FILTER(?hostname != '')
# FILTER(?external_links_in_thesaurus = 1^^xsd:int)
}
ORDER BY DESC(?unique_domains)
LIMIT 20")
response <- POST(url, body = body, encode = "json")
content <- content(response, "parsed")
df <- as.data.frame(do.call(rbind, lapply(content, as.data.frame)))
print(df)
url <- "https://api.linkeddata.cultureelerfgoed.nl/datasets/ruben-schalk/cht-dump/services/cht-dump/sparql"
body <- list(
format = "json",
query = 'PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX gtv: <http://vocab.getty.edu/ontology#>
SELECT ?hostname (count(?term) as ?number_of_links) WHERE {
SERVICE <http://vocab.getty.edu/sparql> {
?term a gtv:Concept .
?term skos:exactMatch ?exactmatch
}
FILTER(!regex(?exactmatch, "getty"))
bind(strbefore(strafter(str(?exactmatch),"//"),"/") as ?hostname)
}
ORDER BY DESC(?number_of_links)'
)
response <- POST(url, body = body, encode = "json")
content <- content(response, "parsed")
df <- as.data.frame(do.call(rbind, lapply(content, as.data.frame)))
print(df)
